{"version":3,"sources":["serviceWorker.js","components/Card.js","components/CardList.js","components/Kitty.js","components/KittyList.js","components/Search.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","actions.js","constants.js","reducers.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","name","mail","id","className","src","alt","CardList","robots","robotCard","map","robot","i","key","email","style","marginTop","Kitty","KittyList","kittys","kittyCard","kitty","paddingTop","background","Search","searchChange","boxShadow","borderBottom","type","placeholder","onChange","Scroll","props","overflowY","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onRequestRobots","onRequestKittys","searchfield","withEveryChange","isPending","filtrador","filter","toLowerCase","includes","kittyFiltrador","connect","searchToys","requestRobots","requestKittys","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","initialStateSearch","initialStateRobots","initialStateKittys","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.81a477e4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nconst Card = ( {name, mail, id} ) =>{\r\n    return( \r\n        <div className=\"br2 pa2 ma2 bg-light-pink grow ba dib shadow-5 tc \">\r\n            <img  src={`https://robohash.org/${id}`} alt=\"Foto de Perfil\" />\r\n            <h2>{name}</h2>\r\n            <p>{mail}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Card; ","import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst CardList = ( {robots} ) =>{\r\n    const robotCard = robots.map( (robot, i) =>{\r\n        return  <Card \r\n        key ={robots[i].id} \r\n        id={robots[i].id} \r\n        name={robots[i].name} \r\n        mail={robots[i].email}/>; \r\n    });\r\n    return(\r\n    <div style={{marginTop: '3em'}}>\r\n       {robotCard}\r\n    </div>\r\n    )\r\n}\r\nexport default CardList; ","import React from 'react'; \r\n\r\nconst Kitty = ( {id, name, mail}) =>{\r\n    return(\r\n        <div className=\"br2 pa2 ma2 bg-light-blue grow ba dib shadow-5 tc kittys\" >\r\n            <img src={`https://robohash.org/${id}?set=set4`} alt =\"Foto de Kitty\" />\r\n            <h2>{name}</h2>\r\n            <p>{mail}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Kitty;","import React from 'react';\r\nimport Kitty from './Kitty';\r\n\r\nconst KittyList = ( {kittys} ) =>{\r\n    const kittyCard = kittys.map( (kitty, i) =>{\r\n        return <Kitty \r\n        key = { kittys[i].id}\r\n        id = { kittys[i].id}\r\n        name = {kittys[i].name}\r\n        mail = {kittys[i].email}/>\r\n    });\r\n    return(\r\n        <div style={{paddingTop: '3em' , background: 'linear-gradient( to left, rgb(40, 177, 184), #ffa3d7)'}}>\r\n            {kittyCard}\r\n        </div>\r\n    )\r\n}\r\nexport default KittyList; ","import React from 'react';\r\n\r\nconst Search = ({searchChange}) =>{\r\n    return(\r\n        <div style={{boxShadow: '0px 15px 15px 0px #0000007d', borderBottom: '1px solid #0000007d'}}>\r\n            <input \r\n            type=\"search\" \r\n            placeholder=\"find a friend\"\r\n            onChange= {searchChange}\r\n             />\r\n        </div>\r\n    );\r\n}\r\nexport default Search; \r\n","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n        <div style={{overflowY: 'scroll' , height: '1000px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll; ","import React, {Component} from 'react'; \r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n    super(props);\r\n    this.state = { \r\n    hasError: false\r\n    }\r\n}\r\ncomponentDidCatch(error, info){\r\n    this.setState({hasError: true})\r\n}\r\nrender(){\r\n    if(this.state.hasError){\r\n        return <h1>Ooop there is an issue...</h1>\r\n    }\r\n    return this.props.children\r\n    }\r\n}\r\nexport default ErrorBoundry;","import React, {Component} from \"react\"; \r\nimport { connect } from 'react-redux';\r\nimport CardList from '../components/CardList';\r\nimport KittyList from '../components/KittyList'; \r\nimport Search from '../components/Search';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport { setSearchField, requestRobots, requestKittys } from '../actions'; \r\nimport './app.css'; \r\n\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return {\r\n        searchfield: state.searchToys.searchfield,\r\n        robots: state.requestRobots.robots,\r\n        isPending: state.requestRobots.isPending,\r\n        error: state.requestRobots.error,\r\n        kittys: state.requestKittys.kittys,\r\n        isPending: state.requestKittys.kitty,\r\n        error: state.requestKittys.error\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        withEveryChange: (event)=> dispatch(setSearchField(event.target.value)),\r\n        onRequestRobots: () => dispatch(requestRobots()),\r\n        onRequestKittys: () => dispatch(requestKittys())\r\n    }\r\n}\r\nclass App extends Component {\r\n    \r\n    componentDidMount(){\r\n        this.props.onRequestRobots();\r\n        this.props.onRequestKittys(); \r\n    }\r\n\r\n    render(){\r\n        const { searchfield, withEveryChange, robots, kittys, isPending } = this.props; \r\n        const filtrador = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        const kittyFiltrador = kittys.filter(kitty =>{\r\n            return kitty.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        if (isPending){\r\n            return <h1 className= \"tc\">Loading...</h1>\r\n        }else{\r\n            return(\r\n                <div className= \"tc\">\r\n                    <h1 className= \"f1 dim\">RoboFriends 1.0</h1>\r\n                    <Search searchChange = { withEveryChange }/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots = { filtrador }/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                    <h1 className= \"f1 pa5 kitty\" >Kitty Friends</h1>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <KittyList kittys = { kittyFiltrador} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>    \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App); \r\n","import { \r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED,\r\n    REQUEST_KITTYS_PENDING,\r\n    REQUEST_KITTYS_SUCCESS,\r\n    REQUEST_KITTYS_FAILED\r\n} from './constants'; \r\n\r\nexport const requestRobots = () => (dispatch) =>{\r\n    dispatch({ type: REQUEST_ROBOTS_PENDING});\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then( response =>response.json())\r\n        .then( data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data}))\r\n        .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error}))\r\n}\r\n\r\nexport const requestKittys = () => (dispatch) =>{\r\n    dispatch({ type: REQUEST_KITTYS_PENDING });\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then( response =>response.json())\r\n        .then( data => dispatch({ type: REQUEST_KITTYS_SUCCESS, payload: data}))\r\n        .catch(error => dispatch({ type: REQUEST_KITTYS_FAILED, payload: error}))\r\n}\r\n\r\nexport const setSearchField = (text) => ({\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text\r\n})","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED'; \r\n\r\nexport const REQUEST_KITTYS_PENDING = 'REQUEST_KITTYS_PENDING';\r\nexport const REQUEST_KITTYS_SUCCESS = 'REQUEST_KITTYS_SUCCESS';\r\nexport const REQUEST_KITTYS_FAILED = 'REQUEST_KITTYS_FAILED'; ","import { \r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED,\r\n    REQUEST_KITTYS_PENDING,\r\n    REQUEST_KITTYS_SUCCESS,\r\n    REQUEST_KITTYS_FAILED\r\n} from './constants'; \r\n\r\nconst initialStateSearch = {\r\n    searchfield: ''\r\n}\r\n\r\nexport const searchToys = (state = initialStateSearch, action= {}) =>{\r\n    switch(action.type){\r\n        case CHANGE_SEARCH_FIELD:\r\n            return Object.assign({}, state, {searchfield:action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialStateRobots = {\r\n    isPending: false, \r\n    robots: [],\r\n    error: ''\r\n}\r\nexport const requestRobots = ( state= initialStateRobots, action= {})=>{\r\n    switch(action.type){\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return Object.assign({}, state, { isPending: true })\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return Object.assign({}, state, { robots: action.payload, isPending: false })\r\n        case REQUEST_ROBOTS_FAILED:\r\n            return Object.assign({}, state, { error: action.payload, isPending: false})\r\n        default:\r\n            return state; \r\n    }\r\n}\r\n\r\nconst initialStateKittys = {\r\n    isPending: false, \r\n    kittys: [],\r\n    error: ''\r\n}\r\nexport const requestKittys = ( state= initialStateKittys, action= {})=>{\r\n    switch(action.type){\r\n        case REQUEST_KITTYS_PENDING:\r\n            return Object.assign({}, state, { isPending: true })\r\n        case REQUEST_KITTYS_SUCCESS:\r\n            return Object.assign({}, state, { kittys: action.payload, isPending: false })\r\n        case REQUEST_KITTYS_FAILED:\r\n            return Object.assign({}, state, { kittys: action.payload, isPending: false})\r\n        default:\r\n            return state; \r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'; \r\nimport { createStore, applyMiddleware, combineReducers } from 'redux'; \r\nimport { createLogger } from 'redux-logger'; \r\nimport thunkMiddleware from 'redux-thunk'; \r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"tachyons\"; \r\nimport App from './containers/App';\r\nimport { searchToys, requestKittys, requestRobots } from './reducers';\r\n\r\nconst logger = createLogger();\r\nconst rootReducer = combineReducers({ searchToys, requestRobots, requestKittys});\r\nconst store = createStore( rootReducer, applyMiddleware( thunkMiddleware, logger) ); \r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n    <App/>\r\n  </Provider>  \r\n  ,document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}